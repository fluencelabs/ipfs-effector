name: Release

on:
  push:
    branches:
      - main

env:
  FORCE_COLOR: true

jobs:
  release-please:
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.release.outputs['version'] }}
      pr: ${{ steps.release.outputs['pr'] }}
      tag-name: ${{ steps.release.outputs['tag_name'] }}
      release_created: ${{ steps.release.outputs['release_created'] }}

    steps:
      - name: Release with release-please
        id: release
        uses: google-github-actions/release-please-action@v4
        with:
            token: ${{ secrets.FLUENCEBOT_RELEASE_PLEASE_PAT }}
            config-file: .github/release-please/config.json
            manifest-file: .github/release-please/manifest.json

      - name: Show output from release-please
        env:
          RELEASE_PLEASE_OUTPUT: ${{ toJSON(steps.release.outputs) }}
        run: echo "${RELEASE_PLEASE_OUTPUT}" | jq

  bump-version:
    if: ${{ needs.release-please.outputs.pr != null }}
    runs-on: ubuntu-latest
    needs:
      - release-please

    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ fromJson(needs.release-please.outputs.pr).headBranchName }}
          token: ${{ secrets.FLUENCEBOT_RELEASE_PLEASE_PAT }}

      - name: Setup Rust toolchain
        uses: dsherret/rust-toolchain-file@v1

      - name: Install cargo-edit
        uses: baptiste0928/cargo-install@v3.0.0
        with:
          crate: cargo-edit

      - name: Get version
        id: version
        run: |
          version="$(jq -r '.[]' .github/release-please/manifest.json)"
          echo "version=${version}" >> $GITHUB_OUTPUT

      # Update ALL packages version if some is changed
      - name: Set version
        run: cargo set-version ${{ steps.version.outputs.version }}

      - name: Commit version bump
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: Bump version to ${{ steps.version.outputs.version }}"
          branch: ${{ fromJson(needs.release-please.outputs.pr).headBranchName }}
          commit_user_name: fluencebot
          commit_user_email: devops@fluence.one
          commit_author: fluencebot <devops@fluence.one>

  upload-archive:
    if: ${{ needs.release-please.outputs.release_created }}

    runs-on: ubuntu-latest

    needs:
        - release-please

    permissions:
        contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup fcli
        uses: fluencelabs/setup-fluence@v1
        with:
          version: 0.15.28

      - name: Build archive
        run: fluence module pack ./effector --binding-crate=./imports/ --no-input -d .

      - name: Extract CID
        id: extract_cid
        run: |
          cid="$(tar -axf ipfs_effector.tar.gz module.yaml -O | grep cid | cut -d' ' -f2)"
          echo "cid=${cid}" > $GITHUB_OUTPUT

      - name: Upload archive
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.release-please.outputs.tag-name }}
          append_body: true
          body: |
            ## Effector Wasm CID
            **CIDv1**: `${{ steps.extract_cid.outputs.cid }}`
          files: |
            ./ipfs_effector.tar.gz

  publish:
    if: ${{ needs.release-please.outputs.release_created }}

    runs-on: ubuntu-latest

    needs:
      - release-please

    permissions:
      contents: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Import secrets
        uses: hashicorp/vault-action@v2.4.3
        with:
          url: https://vault.fluence.dev
          path: jwt/github
          role: ci
          method: jwt
          jwtGithubAudience: "https://github.com/fluencelabs"
          jwtTtl: 300
          exportToken: false
          secrets: |
            kv/crates.io/fluencebot token | CARGO_REGISTRY_TOKEN

      - name: Setup Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Install cargo-workspaces
        uses: baptiste0928/cargo-install@v2.0.0
        with:
          crate: cargo-workspaces
          version: v0.2.44

      - name: Setup IPFS CLI
        uses: nahsi/setup-ipfs@v1

      - name: Setup fcli
        uses: fluencelabs/setup-fluence@v1
        with:
          version: 0.15.28

      - name: Build
        run: ./build.sh

      - name: Publish to crates.io
        run: |
          cargo ws publish \
            --no-git-commit \
            --allow-dirty \
            --from-git \
            --skip-published \
            --yes
